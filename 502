/*
          # [Operation Name]
          Correção da Função de Gatilho de Nova Reserva

          ## Query Description: [Esta operação corrige uma função no banco de dados que é acionada sempre que uma nova reserva é criada. A função continha uma referência a uma coluna inexistente ('is_active') que causava um erro e impedia o salvamento de novas reservas. A referência foi removida para resolver o erro. Adicionalmente, a segurança da função foi melhorada para prevenir potenciais vulnerabilidades.]
          
          ## Metadata:
          - Schema-Category: "Structural"
          - Impact-Level: "Low"
          - Requires-Backup: false
          - Reversible: true
          
          ## Structure Details:
          - Afeta a função: `public.handle_new_reservation_notification()`
          
          ## Security Implications:
          - RLS Status: [N/A]
          - Policy Changes: [No]
          - Auth Requirements: [N/A]
          - A adição de `SET search_path = public` mitiga o aviso de segurança "Function Search Path Mutable".
          
          ## Performance Impact:
          - Indexes: [N/A]
          - Triggers: [N/A]
          - Estimated Impact: [Nenhum impacto de performance esperado.]
          */
CREATE OR REPLACE FUNCTION public.handle_new_reservation_notification()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
 SET search_path TO 'public'
AS $function$
DECLARE
  v_arena_name TEXT;
  v_quadra_name TEXT;
  v_message TEXT;
BEGIN
  -- Obter nomes da arena e da quadra para a notificação
  SELECT name INTO v_arena_name FROM public.arenas WHERE id = NEW.arena_id;
  SELECT name INTO v_quadra_name FROM public.quadras WHERE id = NEW.quadra_id;

  -- Construir a mensagem de notificação para o administrador da arena
  v_message := 'Nova reserva de ' || COALESCE(NEW.clientName, 'Cliente') || 
               ' na quadra ' || v_quadra_name || 
               ' em ' || to_char(NEW.date, 'DD/MM') || 
               ' às ' || to_char(NEW.start_time, 'HH24:MI');

  -- Inserir notificação para o administrador da arena
  INSERT INTO public.notificacoes (arena_id, message, type, link_to)
  VALUES (NEW.arena_id, v_message, 'nova_reserva', '/reservas?reserva_id=' || NEW.id);

  -- Se a reserva estiver associada a um perfil de usuário, notificar o usuário também
  IF NEW.profile_id IS NOT NULL THEN
    v_message := 'Sua reserva na quadra ' || v_quadra_name || ' em ' || v_arena_name ||
                 ' para ' || to_char(NEW.date, 'DD/MM') || ' às ' || to_char(NEW.start_time, 'HH24:MI') ||
                 ' foi confirmada!';
    INSERT INTO public.notificacoes (profile_id, arena_id, message, type, link_to)
    VALUES (NEW.profile_id, NEW.arena_id, v_message, 'nova_reserva', '/perfil');
  END IF;

  RETURN NEW;
END;
$function$;
