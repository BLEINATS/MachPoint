/*
# [Fix] Recreate Notification Trigger and Function
[This migration safely recreates the reservation notification function by first dropping the dependent trigger, updating the function with the correct column name, and then recreating the trigger. This resolves the dependency error encountered during the previous migration attempt.]

## Query Description: [This operation temporarily removes the notification trigger for new reservations, updates the underlying function to fix a column name error (`"clientName"`), and then reinstalls the trigger. There is a brief moment during the migration where new reservation notifications might not be generated, but this is negligible.]

## Metadata:
- Schema-Category: ["Structural"]
- Impact-Level: ["Low"]
- Requires-Backup: [false]
- Reversible: [false]

## Structure Details:
- Trigger: `on_new_reservation_notification` on table `reservas` (Dropped and Recreated)
- Function: `handle_new_reservation_notification()` (Recreated)

## Security Implications:
- RLS Status: [Enabled]
- Policy Changes: [No]
- Auth Requirements: [None]

## Performance Impact:
- Indexes: [None]
- Triggers: [Modified]
- Estimated Impact: [Negligible performance impact.]
*/

-- Step 1: Drop the existing trigger that depends on the function.
DROP TRIGGER IF EXISTS on_new_reservation_notification ON public.reservas;

-- Step 2: Now it's safe to replace the function.
-- This version corrects the column name from `clientname` to `"clientName"`.
CREATE OR REPLACE FUNCTION public.handle_new_reservation_notification()
RETURNS TRIGGER AS $$
BEGIN
  INSERT INTO public.notificacoes(arena_id, message, type, link_to)
  VALUES (
    NEW.arena_id,
    'Nova reserva de ' || NEW."clientName" || ' na quadra ' || (SELECT name FROM public.quadras WHERE id = NEW.quadra_id) || ' em ' || TO_CHAR(NEW.date, 'DD/MM') || ' Ã s ' || NEW.start_time,
    'nova_reserva',
    '/reservas'
  );
  RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Step 3: Recreate the trigger to call the new, corrected function.
CREATE TRIGGER on_new_reservation_notification
AFTER INSERT ON public.reservas
FOR EACH ROW
EXECUTE FUNCTION public.handle_new_reservation_notification();
