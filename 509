/*
  # [Critical Fix] Corrige a verificação de reservas duplicadas
  [Este script corrige uma função de banco de dados que impedia a criação de novas reservas devido a uma referência incorreta de coluna. A função `check_duplicate_reservation` estava tentando acessar `clientname` em vez de `"clientName"`, causando o erro.]

  ## Query Description: [Esta operação substitui a função e o gatilho que verificam reservas duplicadas. A nova versão é mais segura e corrige o erro que impedia o salvamento. Não há risco de perda de dados, pois apenas a lógica de verificação é alterada.]
  
  ## Metadata:
  - Schema-Category: "Structural"
  - Impact-Level: "Medium"
  - Requires-Backup: false
  - Reversible: false
  
  ## Structure Details:
  - Dropping trigger: `on_before_insert_check_duplicate` on table `reservas`
  - Dropping function: `check_duplicate_reservation()`
  - Creating function: `check_duplicate_reservation()`
  - Creating trigger: `on_before_insert_check_duplicate` on table `reservas`
  
  ## Security Implications:
  - RLS Status: [Not Changed]
  - Policy Changes: [No]
  - Auth Requirements: [None]
  
  ## Performance Impact:
  - Indexes: [No change]
  - Triggers: [Recreated]
  - Estimated Impact: [Nenhum impacto de performance esperado. A verificação de duplicados é uma operação rápida.]
*/

-- Drop the existing trigger first to avoid dependency issues
DROP TRIGGER IF EXISTS on_before_insert_check_duplicate ON public.reservas;

-- Drop the faulty function
DROP FUNCTION IF EXISTS public.check_duplicate_reservation();

-- Recreate the function with the correct logic and security settings
CREATE OR REPLACE FUNCTION public.check_duplicate_reservation()
RETURNS TRIGGER AS $$
BEGIN
  -- Check for overlapping reservations on the same court that are not cancelled
  IF EXISTS (
    SELECT 1
    FROM public.reservas
    WHERE
      quadra_id = NEW.quadra_id AND
      date = NEW.date AND
      status <> 'cancelada' AND
      (start_time, end_time) OVERLAPS (NEW.start_time, NEW.end_time) AND
      -- Exclude the current row if we are updating it
      (TG_OP = 'INSERT' OR id <> NEW.id)
  ) THEN
    RAISE EXCEPTION 'Conflito de horário: Já existe uma reserva para esta quadra neste horário.';
  END IF;
  
  RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Recreate the trigger to call the corrected function
CREATE TRIGGER on_before_insert_check_duplicate
BEFORE INSERT OR UPDATE ON public.reservas
FOR EACH ROW
EXECUTE FUNCTION public.check_duplicate_reservation();
